/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import { Contract, ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import { ContractEvent, Callback, TransactionObject, BlockType } from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export class IERC20Token extends Contract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  );
  clone(): IERC20Token;
  methods: {
    transfer(arg0: string, arg1: number | string): TransactionObject<boolean>;

    approve(arg0: string, arg1: number | string): TransactionObject<boolean>;

    transferFrom(
      arg0: string,
      arg1: string,
      arg2: number | string
    ): TransactionObject<boolean>;

    totalSupply(): TransactionObject<string>;

    balanceOf(arg0: string): TransactionObject<string>;

    allowance(arg0: string, arg1: string): TransactionObject<string>;
  };
  events: {
    Transfer: ContractEvent<{
      from: string;
      to: string;
      value: string;
      0: string;
      1: string;
      2: string;
    }>;
    Approval: ContractEvent<{
      owner: string;
      spender: string;
      value: string;
      0: string;
      1: string;
      2: string;
    }>;
    allEvents: (
      options?: EventOptions,
      cb?: Callback<EventLog>
    ) => EventEmitter;
  };
}
